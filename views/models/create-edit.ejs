<h1 id="title"></h1>
<hr>
<form method="post"></form>

<script type="text/javascript">
  const form = document.querySelector('form');
  const submitButton = document.createElement('input');
  const model = '<%- req.params.model %>';
  const modelId = <%- req.params.id || 'null' %>;
  const attributes = <%- JSON.stringify(sails.models[req.params.model].attributes) %>;
  const title = document.getElementById('title')

  let modelEditing = null;

  if(modelId){
    // If editing
    fetch(`/${model}/${modelId}`).then(results => results.json().then(result => {
      modelEditing = result;
      title.innerHTML = result.name;

      for(let i = 0; i < form.elements.length; i++){
        const element = form.elements[i];
        if(element.type == 'submit') continue; // skip the submit button
        if(!result[element.name]) continue; // skip ones with no value
        element.value = result[element.name];
      }

    }));
  } else {
    // Is creating
    title.innerHTML = `New '${model}' item`;
  }


  // on form submit
  form.addEventListener('submit', event => {
    const data = {};
    const fetchMethod = null;

    event.preventDefault();

    fetch(`/${model}` + (modelId ? `/${modelId}` : ''), {
      method: modelId ? 'PUT' : 'POST',
      body: new FormData(form) // this is cool!
    }).then(response => {
      if(response.ok) location.href = `/models/${model}`;
    }, error => {
      console.log('didnt work because idk');
    });

  });

  // create input for each attribute
  for(let key in attributes){
    if(attributes[key].collection) continue; // not supported yet
    const container = document.container = document.createElement('div');
    const label = document.createElement('label');
    let input; // the input for this attribute

    // create the input
    const inputType = getInputType(attributes[key]);

    if(inputType == 'select'){
      const foreignModel = attributes[key].model;
      input = document.createElement('select');

      // get options
      fetch(`/${foreignModel}`).then(response => response.json().then(results => {
        results.forEach(result => {
          const option = document.createElement('option');
          option.value = result.id;
          option.innerHTML = result.name;
          input.appendChild(option);
        });
      }));
    } else if (inputType == 'multiselect?... idk'){
      // not yet supported
    } else {
      // regular input
      input = document.createElement('input');
      input.type = inputType;
      input.id = `model-${key}`;
    }
    input.name = key;

    // create the label
    label.for = input.id;
    label.innerHTML = `${key} `;

    // Append to the input container
    container.appendChild(label);
    container.appendChild(input);

    // Append to the form
    form.appendChild(container);
  }

  // add submit button
  submitButton.type = 'submit';
  form.appendChild(submitButton);

  function getInputType(attribute){
    if(attribute.model) return 'select';
    return {
      'string': 'text',
      'integer': 'number'
    }[attribute.type];
  }
</script>
