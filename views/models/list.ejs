<h1 id="title"></h1>

<div class="actions">
  <a href="/"><- Back</a>
  <a id="add-new" style="float:right">Add new</a>
</div>

<table>
  <thead>
    <tr>
      <!-- Generated Code -->
    </tr>
  </thead>
  <tbody>

  </tbody>
</table>

<script type="text/javascript">
const model = '<%= req.params.model %>';
const theadTr = document.querySelector('table thead tr');
const attributes = <%- JSON.stringify(sails.models[req.params.model].attributes) %>;

document.getElementById('title').innerHTML = model;
document.getElementById('add-new').href = `/models/${model}/create`;

const editTh = document.createElement('th');
editTh.innerHTML = 'Edit';
theadTr.appendChild(editTh);

// convert attributes to th
for(let key in attributes){
  const th = document.createElement('th');
  th.innerHTML = key;
  theadTr.appendChild(th);
}

const deleteTh = document.createElement('th');
deleteTh.innerHTML = 'Delete';
theadTr.appendChild(deleteTh);

// Display the data
fetch(`/${model}`).then(response => response.json().then(data => {
  data.forEach(item => {
    const deleteTd = document.createElement('td');
    const deleteLink = document.createElement('a');
    const editTd = document.createElement('td');
    const editLink = document.createElement('a');
    const tr = document.createElement('tr');

    editLink.innerHTML = 'Edit';
    editLink.href = `/models/${model}/${item.id}`;
    editTd.appendChild(editLink);

    deleteLink.innerHTML = 'Delete';
    deleteLink.href = `/models/${model}`;
    deleteLink.onclick = event => {
      event.preventDefault();
      const warningMessage = `Are you sure you want to delete this item?\n\n${JSON.stringify(item)}`;
      if(confirm(warningMessage)){
        fetch(`/${model}/${item.id}`, {
          'method': 'DELETE',
          'body': item
        }).then(response => {
          location.href = deleteLink.href;
        });
      }
    }
    deleteTd.appendChild(deleteLink);
    tr.appendChild(editTd);

    for(let key in attributes){
      const td = document.createElement('td');
      let name = getFriendlyName(item[key], attributes[key]);

      td.innerHTML = name;
      tr.appendChild(td);
      document.querySelector('table tbody').appendChild(tr);
    }

    tr.appendChild(deleteTd);

  });
}));

function getFriendlyName(attributeValue, attribute){
  if(!attributeValue) {
    return null;
  } else if (attribute.collection) {
    return `${attributeValue.length} ${attribute.collection}`;
  } else if(attribute.model){
    return attributeValue.name;
  } else {
    return attributeValue;
  }
}
</script>
